# Generated by Django 3.2.25 on 2025-01-27 10:00

from django.db import migrations, models
import django.core.validators
import django.utils.timezone
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='El nombre solo puede contener letras.', regex='^[a-zA-Z]+$')])),
                ('last_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='El apellido solo puede contener letras.', regex='^[a-zA-Z]+$')])),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('user_type', models.IntegerField(choices=[(1, 'cajero'), (2, 'almacenero'), (3, 'vendedor'), (4, 'administrador')], default=4)),
                ('ci', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator(message='El CI/NIT debe tener 7-11 dígitos seguidos opcionalmente de un guión y 2 letras mayúsculas (e.g., 1234567-AB o 12345678).', regex='^\\d{7,11}(-[A-Z]{2})?$')])),
                ('phone', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='El número de teléfono debe tener 8 dígitos.', regex='^\\+?1?\\d{8}$')])),
                ('email', models.EmailField(max_length=20, unique=True)),
                ('address', models.CharField(max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('value', models.CharField(default='', max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, validators=[django.core.validators.RegexValidator(message='El nombre solo puede contener letras.', regex='^[a-zA-Z]+$')])),
                ('phone', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='El número de teléfono debe tener 8 dígitos.', regex='^\\+?1?\\d{8}$')])),
                ('nit', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator(message='El NIT debe tener 7-11 dígitos seguidos opcionalmente de un guión y 2 letras mayúsculas (e.g., 1234567-AB o 12345678).', regex='^\\d{7,11}(-[A-Z]{2})?$')])),
                ('email', models.EmailField(blank=True, max_length=50, unique=True)),
                ('address', models.CharField(blank=True, max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SellingChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='El nombre solo puede contener letras y números.', regex='^[a-zA-Z0-9]+$')])),
                ('phone', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='El número de teléfono debe tener 8 dígitos.', regex='^\\+?1?\\d{8}$')])),
                ('nit', models.CharField(blank=True, max_length=50, unique=True, validators=[django.core.validators.RegexValidator(message='El CI/NIT debe tener 7-11 dígitos seguidos opcionalmente de un guión y 2 letras mayúsculas (e.g., 1234567-AB o 12345678).', regex='^\\d{7,11}(-[A-Z]{2})?$')])),
                ('email', models.EmailField(blank=True, max_length=50, unique=True)),
                ('address', models.CharField(blank=True, max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('selling_channel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.sellingchannel')),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='El nombre solo puede contener letras, números, espacios, guiones y guiones bajos.', regex='^[a-zA-Z0-9\\s_-]+$')])),
                ('location', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='La ubicación solo puede contener letras, números, espacios, guiones y guiones bajos.', regex='^[a-zA-Z0-9\\s_-]+$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='El nombre solo puede contener letras, números, espacios, guiones y guiones bajos.', regex='^[a-zA-Z0-9\\s_-]+$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='El nombre solo puede contener letras, números, espacios, guiones y guiones bajos.', regex='^[a-zA-Z0-9\\s_-]+$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.category')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, validators=[django.core.validators.RegexValidator(message='El nombre solo puede contener letras, números, espacios, guiones y guiones bajos.', regex='^[a-zA-Z0-9\\s_-]+$')])),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('stock', models.PositiveIntegerField(default=0)),
                ('code', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator(message='El código solo puede contener letras, números, espacios, guiones y guiones bajos.', regex='^[a-zA-Z0-9\\s_-]+$')])),
                ('unit_of_measurement', models.CharField(max_length=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('minimum_stock', models.PositiveIntegerField(default=0)),
                ('maximum_stock', models.PositiveIntegerField(default=0)),
                ('minimum_sale_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('maximum_sale_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.category')),
            ],
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_date', models.DateTimeField()),
                ('invoice_number', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='El número de factura solo puede contener números.', regex='^\\d+$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='EntryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.entry')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.product')),
            ],
        ),
        migrations.CreateModel(
            name='Output',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('output_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.client')),
            ],
        ),
        migrations.CreateModel(
            name='OutputItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('output', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.output')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.product')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('approved', 'Aprobado'), ('rejected', 'Rechazado')], default='pending', max_length=20)),
                ('payment_method', models.CharField(choices=[('cash', 'Efectivo'), ('card', 'Tarjeta'), ('qr', 'QR')], default='cash', max_length=20)),
                ('sale_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.user')),
            ],
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.product')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.sale')),
            ],
        ),
    ] 